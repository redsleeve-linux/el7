diff -uNrp sos-3.6.orig/sos/policies/redhat.py sos-3.6/sos/policies/redhat.py
--- sos-3.6.orig/sos/policies/redhat.py	2018-11-04 17:44:59.513116585 +0000
+++ sos-3.6/sos/policies/redhat.py	2018-11-04 17:53:28.333731059 +0000
@@ -32,9 +32,9 @@ OS_RELEASE = "/etc/os-release"
 
 
 class RedHatPolicy(LinuxPolicy):
-    distro = "Red Hat"
-    vendor = "Red Hat"
-    vendor_url = "http://www.redhat.com/"
+    distro = "RedSleeve"
+    vendor = "RedSleeve"
+    vendor_url = "http://www.redsleeve.org/"
     _redhat_release = '/etc/redhat-release'
     _tmp_dir = "/var/tmp"
     _rpmq_cmd = 'rpm -qa --queryformat "%{NAME}|%{VERSION}|%{RELEASE}\\n"'
@@ -92,9 +92,9 @@ class RedHatPolicy(LinuxPolicy):
 
     @classmethod
     def check(cls):
-        """This method checks to see if we are running on Red Hat. It must be
+        """This method checks to see if we are running on RedSleeve. It must be
         overriden by concrete subclasses to return True when running on a
-        Fedora, RHEL or other Red Hat distribution or False otherwise."""
+        Fedora, RHEL ,CentOS or RedSleeve distribution or False otherwise."""
         return False
 
     def check_usrmove(self, pkgs):
@@ -185,7 +185,7 @@ class RedHatPolicy(LinuxPolicy):
         return self.host_name()
 
 
-# Container environment variables on Red Hat systems.
+# Container environment variables on RedSleeve systems.
 ENV_CONTAINER = 'container'
 ENV_HOST_SYSROOT = 'HOST'
 
@@ -195,22 +195,22 @@ _opts_all_logs_verify = SoSOptions(all_l
 _opts_all_logs_no_lsof = SoSOptions(all_logs=True,
                                     plugopts=['process.lsof=off'])
 
-RHEL_RELEASE_STR = "Red Hat Enterprise Linux"
+RHEL_RELEASE_STR = "RedSleeve Linux"
 
 RHV = "rhv"
-RHV_DESC = "Red Hat Virtualization"
+RHV_DESC = "RedSleeve Virtualization"
 
 RHEL = "rhel"
 RHEL_DESC = RHEL_RELEASE_STR
 
 RHOSP = "rhosp"
-RHOSP_DESC = "Red Hat OpenStack Platform"
+RHOSP_DESC = "RDO"
 
 RHOCP = "ocp"
-RHOCP_DESC = "OpenShift Container Platform by Red Hat"
+RHOCP_DESC = "OpenShift"
 
 RH_SATELLITE = "satellite"
-RH_SATELLITE_DESC = "Red Hat Satellite"
+RH_SATELLITE_DESC = "Satellite"
 
 NOTE_SIZE = "This preset may increase report size"
 NOTE_TIME = "This preset may increase report run time"
@@ -230,9 +230,9 @@ rhel_presets = {
 
 
 class RHELPolicy(RedHatPolicy):
-    distro = RHEL_RELEASE_STR
-    vendor = "Red Hat"
-    vendor_url = "https://access.redhat.com/support/"
+    distro = "RedSleeve Linux"
+    vendor = "RedSleeve"
+    vendor_url = "https://github.com/redsleeve-linux/"
     msg = _("""\
 This command will collect diagnostic and configuration \
 information from this %(distro)s system and installed \
@@ -262,7 +262,7 @@ No changes will be made to system config
     def check(cls):
         """Test to see if the running host is a RHEL installation.
 
-            Checks for the presence of the "Red Hat Enterprise Linux"
+            Checks for the presence of the "RedSleeve Linux"
             release string at the beginning of the NAME field in the
             `/etc/os-release` file and returns ``True`` if it is
             found, and ``False`` otherwise.
@@ -324,7 +324,7 @@ No changes will be made to system config
 
 ATOMIC = "atomic"
 ATOMIC_RELEASE_STR = "Atomic"
-ATOMIC_DESC = "Red Hat Enterprise Linux Atomic Host"
+ATOMIC_DESC = "RedSleeve Linux Atomic Host"
 
 atomic_presets = {
     ATOMIC: PresetDefaults(name=ATOMIC, desc=ATOMIC_DESC, note=NOTE_TIME,
@@ -333,7 +333,7 @@ atomic_presets = {
 
 
 class RedHatAtomicPolicy(RHELPolicy):
-    distro = "Red Hat Atomic Host"
+    distro = "RedSleeve Atomic Host"
     msg = _("""\
 This command will collect diagnostic and configuration \
 information from this %(distro)s system.
