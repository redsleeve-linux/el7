From b663631fe2a6b31a3dcc1f1dfaeef8377ff07612 Mon Sep 17 00:00:00 2001
From: Matej Habrnal <mhabrnal@redhat.com>
Date: Tue, 16 Sep 2014 01:37:19 +0200
Subject: [LIBREPORT PATCH 70/93] testsuite: change test for make_description

Change test for make_description because of new order its items.

Related to rhbz#1067440

Signed-off-by: Matej Habrnal <mhabrnal@redhat.com>
---
 tests/make_description.at | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/tests/make_description.at b/tests/make_description.at
index 7415cf8..e606065 100644
--- a/tests/make_description.at
+++ b/tests/make_description.at
@@ -83,7 +83,7 @@ int main(int argc, char **argv)
     const int list_flags = CD_FLAG_TXT | CD_FLAG_ISNOTEDITABLE | CD_FLAG_LIST;
 
     problem_data_add(pd, FILENAME_PACKAGE, "libreport", list_flags);
-    problem_data_add(pd, FILENAME_EXECUTABLE, "/usr/bin/sh", list_flags);
+    problem_data_add(pd, FILENAME_REASON, "will_segfault killed by SIGSEGV", list_flags);
     problem_data_add(pd, FILENAME_COUNT, "0", list_flags);
 
     problem_data_add_text_noteditable(pd,
@@ -103,9 +103,9 @@ int main(int argc, char **argv)
             "Reported:       https://bugzilla.redhat.com/1000000\n"
             "                https://access.redhat.com/home\n"
             "                https://bug-report.itos.redhat.com\n",
-            FILENAME_COUNT,      14 - strlen(FILENAME_COUNT),      "", "0",
-            FILENAME_EXECUTABLE, 14 - strlen(FILENAME_EXECUTABLE), "", "/usr/bin/sh",
-            FILENAME_PACKAGE,    14 - strlen(FILENAME_PACKAGE),    "", "libreport");
+            FILENAME_REASON,     14 - strlen(FILENAME_REASON),     "", "will_segfault killed by SIGSEGV",
+            FILENAME_PACKAGE,    14 - strlen(FILENAME_PACKAGE),    "", "libreport",
+            FILENAME_COUNT,      14 - strlen(FILENAME_COUNT),      "", "0");
 
     if (strcmp(expected, description) != 0)
     {
@@ -133,10 +133,10 @@ int main(int argc, char **argv)
             "\n"
             "%s: %*sText file, %llu bytes\n"
             "%s: %*sText file, %llu bytes\n",
-            FILENAME_BACKTRACE,  14 - strlen(FILENAME_BACKTRACE),  "", backtrace,
-            FILENAME_COUNT,      14 - strlen(FILENAME_COUNT),      "", "0",
-            FILENAME_EXECUTABLE, 14 - strlen(FILENAME_EXECUTABLE), "", "/usr/bin/sh",
+            FILENAME_REASON,     14 - strlen(FILENAME_REASON),     "", "will_segfault killed by SIGSEGV",
             FILENAME_PACKAGE,    14 - strlen(FILENAME_PACKAGE),    "", "libreport",
+            FILENAME_COUNT,      14 - strlen(FILENAME_COUNT),      "", "0",
+            FILENAME_BACKTRACE,  14 - strlen(FILENAME_BACKTRACE),  "", backtrace,
             FILENAME_BACKTRACE,  14 - strlen(FILENAME_BACKTRACE),  "", (long long unsigned)strlen(backtrace),
             FILENAME_REPORTED_TO,14 - strlen(FILENAME_REPORTED_TO),"", (long long unsigned)strlen(problem_data_get_content_or_NULL(pd, FILENAME_REPORTED_TO))
             );
@@ -155,7 +155,7 @@ int main(int argc, char **argv)
     pd = problem_data_new();
 
     problem_data_add(pd, FILENAME_PACKAGE, "libreport", list_flags);
-    problem_data_add(pd, FILENAME_EXECUTABLE, "/usr/bin/sh", list_flags);
+    problem_data_add(pd, FILENAME_REASON, "will_segfault killed by SIGSEGV", list_flags);
     problem_data_add(pd, FILENAME_COUNT, "0", list_flags);
     problem_data_add(pd, FILENAME_BACKTRACE, backtrace,  CD_FLAG_TXT | CD_FLAG_ISNOTEDITABLE);
 
@@ -168,10 +168,10 @@ int main(int argc, char **argv)
             "%s: %*s%s\n"
             "\n"
             "%s: %*sText file, %llu bytes\n",
-            FILENAME_BACKTRACE,  14 - strlen(FILENAME_BACKTRACE),  "", backtrace,
-            FILENAME_COUNT,      14 - strlen(FILENAME_COUNT),      "", "0",
-            FILENAME_EXECUTABLE, 14 - strlen(FILENAME_EXECUTABLE), "", "/usr/bin/sh",
+            FILENAME_REASON,     14 - strlen(FILENAME_REASON),     "", "will_segfault killed by SIGSEGV",
             FILENAME_PACKAGE,    14 - strlen(FILENAME_PACKAGE),    "", "libreport",
+            FILENAME_COUNT,      14 - strlen(FILENAME_COUNT),      "", "0",
+            FILENAME_BACKTRACE,  14 - strlen(FILENAME_BACKTRACE),  "", backtrace,
             FILENAME_BACKTRACE,  14 - strlen(FILENAME_BACKTRACE),  "", (long long unsigned)strlen(backtrace)
             );
 
-- 
1.8.3.1

