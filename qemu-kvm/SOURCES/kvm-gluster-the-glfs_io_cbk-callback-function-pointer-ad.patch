From 0ac5c46ee89604090f766124d67b6530433140fd Mon Sep 17 00:00:00 2001
From: Miroslav Rezanina <mrezanin@redhat.com>
Date: Tue, 14 Apr 2020 07:08:27 +0200
Subject: [PATCH 2/2] gluster: the glfs_io_cbk callback function pointer adds
 pre/post stat args

RH-Author: Miroslav Rezanina <mrezanin@redhat.com>
Message-id: <5ef3ecfcbfd79eda54fef2609efd3c7cb5710630.1586442545.git.mrezanin@redhat.com>
Patchwork-id: 94623
O-Subject: [RHEL-7.8 qemu-kvm PATCH 2/2] gluster: the glfs_io_cbk callback function pointer adds pre/post stat args
Bugzilla: 1822235
RH-Acked-by: John Snow <jsnow@redhat.com>
RH-Acked-by: Stefano Garzarella <sgarzare@redhat.com>
RH-Acked-by: Max Reitz <mreitz@redhat.com>

From: Miroslav Rezanina <mrezanin@redhat.com>

From: Niels de Vos <ndevos@redhat.com>

The glfs_*_async() functions do a callback once finished. This callback
has changed its arguments, pre- and post-stat structures have been
added. This makes it possible to improve caching, which is useful for
Samba and NFS-Ganesha, but not so much for QEMU. Gluster 6 is the first
release that includes these new arguments.

With an additional detection in ./configure, the new arguments can
conditionally get included in the glfs_io_cbk handler.

Signed-off-by: Niels de Vos <ndevos@redhat.com>
Signed-off-by: Kevin Wolf <kwolf@redhat.com>
(cherry picked from commit 0e3b891fefacc0e49f3c8ffa3a753b69eb7214d2)
Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>

RHEL: first chunk of the patch was applied manually due to very
different context, for other chunks conficts were fixed.

Signed-off-by: Miroslav Rezanina <mrezanin@redhat.com>
---
 block/gluster.c |  7 ++++++-
 configure       | 24 ++++++++++++++++++++++++
 2 files changed, 30 insertions(+), 1 deletion(-)

diff --git a/block/gluster.c b/block/gluster.c
index d6160af..dba3e0a 100644
--- a/block/gluster.c
+++ b/block/gluster.c
@@ -571,7 +571,12 @@ static const AIOCBInfo gluster_aiocb_info = {
     .cancel = qemu_gluster_aio_cancel,
 };
 
-static void gluster_finish_aiocb(struct glfs_fd *fd, ssize_t ret, void *arg)
+static void gluster_finish_aiocb(struct glfs_fd *fd, ssize_t ret,
+#ifdef CONFIG_GLUSTERFS_IOCB_HAS_STAT
+                                 struct glfs_stat *pre, struct glfs_stat *post,
+#endif
+                                 void *arg)
+
 {
     GlusterAIOCB *acb = (GlusterAIOCB *)arg;
     BlockDriverState *bs = acb->common.bs;
diff --git a/configure b/configure
index 70fd06f..34e3acc 100755
--- a/configure
+++ b/configure
@@ -244,6 +244,7 @@ glusterfs=""
 glusterfs_discard="no"
 virtio_blk_data_plane=""
 glusterfs_ftruncate_has_stat="no"
+glusterfs_iocb_has_stat="no"
 gtk=""
 gtkabi="2.0"
 tpm="no"
@@ -2762,6 +2763,25 @@ EOF
     if compile_prog "$glusterfs_cflags" "$glusterfs_libs" ; then
       glusterfs_ftruncate_has_stat="yes"
     fi
+    cat > $TMPC << EOF
+#include <glusterfs/api/glfs.h>
+
+/* new glfs_io_cbk() passes two additional glfs_stat structs */
+static void
+glusterfs_iocb(glfs_fd_t *fd, ssize_t ret, struct glfs_stat *prestat, struct glfs_stat *poststat, void *data)
+{}
+
+int
+main(void)
+{
+	glfs_io_cbk iocb = &glusterfs_iocb;
+	iocb(NULL, 0 , NULL, NULL, NULL);
+	return 0;
+}
+EOF
+    if compile_prog "$glusterfs_cflags" "$glusterfs_libs" ; then
+      glusterfs_iocb_has_stat="yes"
+    fi
   else
     if test "$glusterfs" = "yes" ; then
       feature_not_found "GlusterFS backend support"
@@ -4196,6 +4216,10 @@ if test "$glusterfs_ftruncate_has_stat" = "yes" ; then
   echo "CONFIG_GLUSTERFS_FTRUNCATE_HAS_STAT=y" >> $config_host_mak
 fi
 
+if test "$glusterfs_iocb_has_stat" = "yes" ; then
+  echo "CONFIG_GLUSTERFS_IOCB_HAS_STAT=y" >> $config_host_mak
+fi
+
 if test "$live_block_migration" = "yes" ; then
   echo "CONFIG_LIVE_BLOCK_MIGRATION=y" >> $config_host_mak
 fi
-- 
1.8.3.1

