diff -up ./nss/lib/freebl/cts.c.1154764extras ./nss/lib/freebl/cts.c
--- ./nss/lib/freebl/cts.c.1154764extras	2015-01-12 13:53:36.393855248 -0800
+++ ./nss/lib/freebl/cts.c	2015-01-12 13:53:36.548856551 -0800
@@ -97,7 +97,7 @@ CTS_EncryptUpdate(CTSContext *cts, unsig
     unsigned int tmp;
     int fullblocks;
     int written;
-    char *saveout = outbuf;
+    char *saveout = (char *) outbuf;
     SECStatus rv;
 
     if (inlen < blocksize) {
@@ -187,7 +187,7 @@ CTS_DecryptUpdate(CTSContext *cts, unsig
     unsigned char Cn[MAX_BLOCK_SIZE];   /* block Cn   */
     unsigned char lastBlock[MAX_BLOCK_SIZE];
     const unsigned char *tmp;
-    char *saveout = outbuf;
+    char *saveout = (char *) outbuf;
     unsigned int tmpLen;
     int fullblocks, pad;
     unsigned int i;
diff -up ./nss/lib/freebl/ldvector.c.1154764extras ./nss/lib/freebl/ldvector.c
--- ./nss/lib/freebl/ldvector.c.1154764extras	2015-01-12 13:53:36.541856492 -0800
+++ ./nss/lib/freebl/ldvector.c	2015-01-12 13:53:36.549856559 -0800
@@ -339,8 +339,6 @@ static const struct NSSLOWVectorStr nssv
 const NSSLOWVector *
 NSSLOW_GetVector(void)
 {
-    SECStatus rv;
-
     /* POST check and  stub init happens in FREEBL_GetVector() and 
      * NSSLOW_Init() respectively */
     return &nssvector;
diff -up ./nss/lib/freebl/lowhash_vector.c.1154764extras ./nss/lib/freebl/lowhash_vector.c
--- ./nss/lib/freebl/lowhash_vector.c.1154764extras	2015-01-12 13:53:36.542856500 -0800
+++ ./nss/lib/freebl/lowhash_vector.c	2015-01-12 13:53:36.549856559 -0800
@@ -107,8 +107,6 @@ static PRCallOnceType loadFreeBLOnce;
 static PRStatus
 freebl_RunLoaderOnce( void )
 {
-  PRStatus status;
-
   /* Don't have NSPR, so can use the real PR_CallOnce, implement a stripped
    * down version. */
   if (loadFreeBLOnce.initialized) {
diff -up ./nss/lib/freebl/rsa.c.1154764extras ./nss/lib/freebl/rsa.c
--- ./nss/lib/freebl/rsa.c.1154764extras	2015-01-12 13:53:36.479855971 -0800
+++ ./nss/lib/freebl/rsa.c	2015-01-12 13:53:36.549856559 -0800
@@ -343,11 +343,10 @@ RSA_NewKey(int keySizeInBits, SECItem *p
 	    if (rsa_fips186_verify(&p, &q, &d, keySizeInBits) ){
 		break;
 	    }
-	    prerr = PORT_GetError();
-	} else {
 	    prerr = SEC_ERROR_NEED_RANDOM; /* retry with different values */
+	} else {
+	    prerr = PORT_GetError();
 	}
-	prerr = PORT_GetError();
 	kiter++;
 	/* loop until have primes */
     } while (prerr == SEC_ERROR_NEED_RANDOM && kiter < max_attempts);
diff -up ./nss/lib/softoken/legacydb/lgfips.c.1154764extras ./nss/lib/softoken/legacydb/lgfips.c
--- ./nss/lib/softoken/legacydb/lgfips.c.1154764extras	2015-01-12 13:53:36.386855189 -0800
+++ ./nss/lib/softoken/legacydb/lgfips.c	2015-01-12 13:53:36.550856568 -0800
@@ -81,7 +81,6 @@ static void
 lg_startup_tests(void)
 {
     PRBool fipsInstalled;
-    SECStatus rv;
     const char *libraryName = LG_LIB_NAME;
 
     PORT_Assert(!sftk_self_tests_ran);
