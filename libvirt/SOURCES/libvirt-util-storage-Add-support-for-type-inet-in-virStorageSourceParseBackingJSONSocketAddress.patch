From bc2eb8e377c02190ee96a78ba0f1ede84ec65c72 Mon Sep 17 00:00:00 2001
Message-Id: <bc2eb8e377c02190ee96a78ba0f1ede84ec65c72@dist-git>
From: Peter Krempa <pkrempa@redhat.com>
Date: Tue, 20 Jun 2017 10:22:38 +0200
Subject: [PATCH] util: storage: Add support for type 'inet' in
 virStorageSourceParseBackingJSONSocketAddress

'SocketAddress' structure was changed to contain 'inet' instead of
'tcp' since qemu commit c5f1ae3ae7b. Existing entries have a backward
compatibility layer.

Libvirt will parse 'inet' and 'tcp' as equivalents.

(cherry picked from commit 1f915d40a220c6bb05d8630507eed045cabfba34)

https://bugzilla.redhat.com/show_bug.cgi?id=1461638

Signed-off-by: Jiri Denemark <jdenemar@redhat.com>
Reviewed-by: Pavel Hrdina <phrdina@redhat.com>
---
 src/util/virstoragefile.c | 23 +++++++++--------------
 tests/virstoragetest.c    |  2 +-
 2 files changed, 10 insertions(+), 15 deletions(-)

diff --git a/src/util/virstoragefile.c b/src/util/virstoragefile.c
index b8aced5055..3c06685d6b 100644
--- a/src/util/virstoragefile.c
+++ b/src/util/virstoragefile.c
@@ -2807,18 +2807,17 @@ virStorageSourceParseBackingJSONSocketAddress(virStorageNetHostDefPtr host,
     const char *hostname = virJSONValueObjectGetString(json, "host");
     const char *port = virJSONValueObjectGetString(json, "port");
     const char *socket = virJSONValueObjectGetString(json, "socket");
-    int transport;
 
-    if ((transport = virStorageNetHostTransportTypeFromString(type)) < 0) {
-        virReportError(VIR_ERR_INTERNAL_ERROR,
-                       _("unknown backing store transport protocol '%s'"), type);
+    if (!type) {
+        virReportError(VIR_ERR_INVALID_ARG, "%s",
+                       _("missing socket address type in "
+                         "JSON backing volume definition"));
         return -1;
     }
 
-    host->transport = transport;
+    if (STREQ(type, "tcp") || STREQ(type, "inet")) {
+        host->transport = VIR_STORAGE_NET_HOST_TRANS_TCP;
 
-    switch ((virStorageNetHostTransport) transport) {
-    case VIR_STORAGE_NET_HOST_TRANS_TCP:
         if (!hostname) {
             virReportError(VIR_ERR_INVALID_ARG, "%s",
                            _("missing hostname for tcp backing server in "
@@ -2829,9 +2828,9 @@ virStorageSourceParseBackingJSONSocketAddress(virStorageNetHostDefPtr host,
         if (VIR_STRDUP(host->name, hostname) < 0 ||
             VIR_STRDUP(host->port, port) < 0)
             return -1;
-        break;
+    } else if (STREQ(type, "unix")) {
+        host->transport = VIR_STORAGE_NET_HOST_TRANS_UNIX;
 
-    case VIR_STORAGE_NET_HOST_TRANS_UNIX:
         if (!socket) {
             virReportError(VIR_ERR_INVALID_ARG, "%s",
                            _("missing socket path for udp backing server in "
@@ -2839,13 +2838,9 @@ virStorageSourceParseBackingJSONSocketAddress(virStorageNetHostDefPtr host,
             return -1;
         }
 
-
         if (VIR_STRDUP(host->socket, socket) < 0)
             return -1;
-        break;
-
-    case VIR_STORAGE_NET_HOST_TRANS_RDMA:
-    case VIR_STORAGE_NET_HOST_TRANS_LAST:
+    } else {
         virReportError(VIR_ERR_INTERNAL_ERROR,
                        _("backing store protocol '%s' is not yet supported"),
                        type);
diff --git a/tests/virstoragetest.c b/tests/virstoragetest.c
index 984994d8e7..4a1d4d0923 100644
--- a/tests/virstoragetest.c
+++ b/tests/virstoragetest.c
@@ -1431,7 +1431,7 @@ mymain(void)
                                                "{ \"type\":\"unix\","
                                                  "\"socket\":\"/path/socket\""
                                                "},"
-                                               "{ \"type\":\"tcp\","
+                                               "{ \"type\":\"inet\","
                                                  "\"host\":\"example.com\""
                                                "}"
                                              "]"
-- 
2.13.1

