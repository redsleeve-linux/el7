diff --git a/modules/mappers/mod_rewrite.c b/modules/mappers/mod_rewrite.c
index c4109d6..b89d3e4 100644
--- a/modules/mappers/mod_rewrite.c
+++ b/modules/mappers/mod_rewrite.c
@@ -599,6 +599,13 @@ static unsigned is_absolute_uri(char *uri, int *supportsqs)
             return 6;
         }
         break;
+
+    case 'u':
+    case 'U':
+        if (!ap_cstr_casecmpn(uri, "nix:", 4)) {        /* unix:     */
+            *sqs = 1;
+            return (uri[4] == '/' && uri[5] == '/') ? 7 : 5;
+        }
     }
 
     return 0;
diff --git a/modules/proxy/mod_proxy.c b/modules/proxy/mod_proxy.c
index 506a046..29a39f8 100644
--- a/modules/proxy/mod_proxy.c
+++ b/modules/proxy/mod_proxy.c
@@ -1442,7 +1442,7 @@ static char *de_socketfy(apr_pool_t *p, char *url)
      * the UDS path... ignore it
      */
     if (!strncasecmp(url, "unix:", 5) &&
-        ((ptr = ap_strchr(url, '|')) != NULL)) {
+        ((ptr = ap_strchr_c(url + 5, '|')) != NULL)) {
         /* move past the 'unix:...|' UDS path info */
         char *ret, *c;
 
diff --git a/modules/proxy/proxy_util.c b/modules/proxy/proxy_util.c
index ca6cb87..e5862f8 100644
--- a/modules/proxy/proxy_util.c
+++ b/modules/proxy/proxy_util.c
@@ -2010,8 +2010,7 @@ PROXY_DECLARE(int) ap_proxy_pre_request(proxy_worker **worker,
         }
         else if (r->proxyreq == PROXYREQ_REVERSE) {
             if (conf->reverse) {
-                char *ptr;
-                char *ptr2;
+                char *uds_url = r->filename + 6, *origin_url;
                 ap_log_rerror(APLOG_MARK, APLOG_TRACE2, 0, r,
                               "*: found reverse proxy worker for %s", *url);
                 *balancer = NULL;
@@ -2032,25 +2031,38 @@ PROXY_DECLARE(int) ap_proxy_pre_request(proxy_worker **worker,
                  * check to see if r->filename starts with 'proxy:'
                  */
                 if (apr_table_get(r->notes, "rewrite-proxy") &&
-                    (ptr2 = ap_strcasestr(r->filename, "unix:")) &&
-                    (ptr = ap_strchr(ptr2, '|'))) {
+                    !ap_cstr_casecmpn(uds_url, "unix:", 5) &&
+                    (origin_url = ap_strchr(uds_url + 5, '|'))) {
+
+                    char *uds_path = NULL;
+                    apr_size_t url_len;
                     apr_uri_t urisock;
                     apr_status_t rv;
-                    *ptr = '\0';
-                    rv = apr_uri_parse(r->pool, ptr2, &urisock);
-                    if (rv == APR_SUCCESS) {
-                        char *rurl = ptr+1;
-                        char *sockpath = ap_runtime_dir_relative(r->pool, urisock.path);
-                        apr_table_setn(r->notes, "uds_path", sockpath);
-                        *url = apr_pstrdup(r->pool, rurl); /* so we get the scheme for the uds */
-                        /* r->filename starts w/ "proxy:", so add after that */
-                        memmove(r->filename+6, rurl, strlen(rurl)+1);
-                        ap_log_rerror(APLOG_MARK, APLOG_TRACE2, 0, r,
-                                      "*: rewrite of url due to UDS(%s): %s (%s)",
-                                      sockpath, *url, r->filename);
+
+                    *origin_url = '\0';
+                    rv = apr_uri_parse(r->pool, uds_url, &urisock);
+                    *origin_url++ = '|';
+
+                    if (rv == APR_SUCCESS && urisock.path && (!urisock.hostname
+                                                              || !urisock.hostname[0])) {
+                         uds_path = ap_runtime_dir_relative(r->pool, urisock.path);
                     }
-                    else {
-                        *ptr = '|';
+
+                    if (!uds_path) {
+                         ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(10292)
+                         "Invalid proxy UDS filename (%s)", r->filename);
+                         access_status = HTTP_INTERNAL_SERVER_ERROR;
+                    } else {
+                         apr_table_setn(r->notes, "uds_path", uds_path);
+
+                         /* Remove the UDS path from *url and r->filename */
+                         url_len = strlen(origin_url);
+                         *url = apr_pstrmemdup(r->pool, origin_url, url_len);
+                         memcpy(uds_url, *url, url_len + 1);
+
+                         ap_log_rerror(APLOG_MARK, APLOG_TRACE2, 0, r,
+                               "*: rewrite of url due to UDS(%s): %s (%s)",
+                               uds_path, *url, r->filename);
                     }
                 }
             }
